{"name":"Friar","tagline":"A simple Python wrapper for jsonrpc interfaces","body":"# Friar\r\n\r\n[![Build Status](https://travis-ci.org/jelford/friar.svg?branch=master)](https://travis-ci.org/jelford/friar)\r\n\r\nA simple python library for wrapping JSON RPC interfaces\r\n\r\n## Install instructions\r\n\r\n    pip install friar\r\n\r\nFind it on PyPi: https://pypi.python.org/pypi/friar\r\n\r\n## Usage\r\n\r\nHttp Endpoints are simple to get up and running. Each Friar connection is backed by a [requests](http://www.python-requests.org/en/latest/) session, so you get `urllib3` connection pooling and other good stuff for free.\r\n\r\n```\r\n>>> endpoint = friar.http_rpc_endpoint(\r\n                        url='http://some.host.com/api/v1', \r\n                        method_prefix='ApiPrefix-', \r\n                        headers={'X-Session-Key': 'abcdef'})\r\n\r\n# Simple method call with positional parameters\r\n>>> endpoint.subtract(42, 23)\r\n#  --> {\"jsonrpc\": \"2.0\", \"method\": \"ApiPrefix-subtract\", \"params\": [42, 23], \"id\": 1}\r\n#  <-- {\"jsonrpc\": \"2.0\", \"result\": 19, \"id\": 1}\r\n19\r\n\r\n# Named parameters\r\n>>> endpoint.subtract(subtrahend=23, minuend=42)\r\n#  --> {\"jsonrpc\": \"2.0\", \"method\": \"ApiPrefix-subtract\", \"params\": {\"subtrahend\": 23, \"minuend\": 42}, \"id\": 2}\r\n#  <-- {\"jsonrpc\": \"2.0\", \"result\": 19, \"id\": 2}\r\n19\r\n```\r\n\r\nBatch requests are also supported:\r\n\r\n```\r\n>>> endpoint = friar.http_rpc_endpoint(url='http://some.host.com/api/v1')\r\n\r\n>>> endpoint.batch().sum(1,2,4).subtract(42,23).get_data().send()\r\n#  --> [\r\n#        {\"jsonrpc\": \"2.0\", \"method\": \"sum\", \"params\": [1,2,4], \"id\": \"1\"},\r\n#        {\"jsonrpc\": \"2.0\", \"method\": \"subtract\", \"params\": [42,23], \"id\": \"2\"},\r\n#        {\"jsonrpc\": \"2.0\", \"method\": \"get_data\", \"id\": \"3\"} \r\n#    ]\r\n#  <-- [\r\n#        {\"jsonrpc\": \"2.0\", \"result\": 7, \"id\": \"1\"},\r\n#        {\"jsonrpc\": \"2.0\", \"result\": 19, \"id\": \"2\"},\r\n#        {\"jsonrpc\": \"2.0\", \"result\": [\"hello\", 5], \"id\": \"9\"}\r\n#    ]\r\n```\r\n\r\nNotifications are sent using the `async=True` flag:\r\n\r\n```\r\n>>> endpoint.batch().foo().bar().baz().send(async=True)\r\n#  --> [\r\n#        {\"jsonrpc\": \"2.0\", \"method\": \"foo\"},\r\n#        {\"jsonrpc\": \"2.0\", \"method\": \"bar\"},\r\n#        {\"jsonrpc\": \"2.0\", \"method\": \"baz\"} \r\n#    ]","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}